#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["AL Aurora Noctis S1 - Norfolk Nonspell - Hard"]
#Text["Azur Lane - Aurora Noctis[r]Stage 1 Miniboss"]
#BGM["./../music/Frozen Eternal Capital.ogg"]
#Background["script/default_system/Default_Background_IceMountain.txt"]
#include "script/Skip Scripts/common/AllStarShot/AllStarShot_Const.dnh"
#include "script/Skip Scripts/common/libraries/skip_general_lib.dnh"

let objBoss;

@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){ SetScriptResult(3200); }
    case(EV_REQUEST_TIMER){ SetScriptResult(23); }
    case(EV_REQUEST_SPELL_SCORE){ SetScriptResult(100000); }
}

@Initialize{
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	SetCommonData("bossActive", 1);
	
	ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 100, 60);
    TDrawLoop; 
    TFinalize;
    MainTask;
}

@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
	
	yield;
}

task TDrawLoop {
	let imgBoss = GetCurrentScriptDirectory() ~ "../images/NorfolkChibi.png";
	ObjPrim_SetTexture(objBoss, imgBoss);
	ObjSprite2D_SetSourceRect(objBoss, 1, 1, 61, 71); 			
	ObjSprite2D_SetDestCenter(objBoss);
}

task MainTask {
	wait(60);
	shields;
	wait(60);
	fire;
	movement;
	wait(30);
	fire;
	
}

task TFinalize {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) { yield; }
	SetAutoDeleteObject(true);
	SetCommonData("bossActive", 0);
	killBoss(objBoss);
	wait(180);
	CloseScript(GetOwnScriptID());
}


task movement {			// TODO
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		ObjMove_SetDestAtSpeed(objBoss, 
			rand(GetCenterX()/4, GetStgFrameWidth() - GetCenterX()/4), 
			rand(40, 100), 1);
		wait(60);
	}
}

task shields {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		let bossX = ObjMove_GetX(objBoss);
		let bossY = ObjMove_GetY(objBoss);
		let angle = 90 + 25/2 + 3*20;
		
		PlaySound("Atk3", 25, 15);
		loop(2) {
			loop(20) {
				CreateShotA2(bossX, bossY, 6, angle, -0.15, 1, 23, 15);
				angle -= 3;
			}
			angle -= 25;
		}
		wait(60);
	}
}

task fire {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		let angleA = 220;
		let angleB = 320;
		ascent(i in 0..30) {
			if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
			fireShot(angleA + i*10, 1.5);
			fireShot(angleB - i*10, -1.5);
			wait(8);
		}
	}
}

task fireShot(angle, dir) {
	let bossX = ObjMove_GetX(objBoss);
	let bossY = ObjMove_GetY(objBoss);
	let obj = CreateShotA1(bossX, bossY, 2, angle, 259, 0);
	wait(45);
	ObjMove_SetAngularVelocity(obj, 9*dir);
	wait(15);
	ObjMove_SetAngularVelocity(obj, 0);
}

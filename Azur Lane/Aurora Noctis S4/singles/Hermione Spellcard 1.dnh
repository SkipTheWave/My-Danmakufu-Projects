#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["AL Aurora Noctis S4 - Hermione Spellcard 1"]
#Text["Azur Lane - Aurora Noctis[r]Stage 4 Boss[r]\"Royal Maid - Blast Geminio\""]
#BGM["./../music/Battlefield.ogg"]
#Background["script/default_system/Default_Background_IceMountain.txt"]
#System["./../../system/Default_System.txt"]
#include "script/Skip Scripts/common/AllStarShot/AllStarShot_Const.dnh"
#include "script/Skip Scripts/common/libraries/skip_general_lib.dnh"
#include "script/Cutin/Cutin.txt"

let objBoss;
let objScene = GetEnemyBossSceneObjectID();

@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){ SetScriptResult(5500); }
    case(EV_REQUEST_TIMER){ SetScriptResult(40); }
    case(EV_REQUEST_SPELL_SCORE){ SetScriptResult(300000); }
}

@Initialize{
	SetPauseScriptPath(GetCurrentScriptDirectory() ~ "./../../system/Pause.dnh");
    SetEndSceneScriptPath(GetCurrentScriptDirectory() ~ "./../../system/EndScene.dnh");
    SetReplaySaveSceneScriptPath(GetCurrentScriptDirectory() ~ "./../../system/ReplaySaveScene.dnh");

	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	SetCommonData("bossActive", 1);
	StartSpell;
	
	ObjMove_SetDestAtFrame(objBoss, GetCenterX(), 120, 60);
    TDrawLoop; 
    TFinalize;
    MainTask;
}

@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
	
	yield;
}

task TDrawLoop {
	let imgBoss = GetCurrentScriptDirectory() ~ "../images/HermioneChibi.png";
	ObjPrim_SetTexture(objBoss, imgBoss);
	ObjSprite2D_SetSourceRect(objBoss, 1, 1, 71, 74); 			
	ObjSprite2D_SetDestCenter(objBoss);
}

task MainTask {
	wait(90);
	let angleT = rand(0, 360);
	gemini(-1);
	gemini(1);
	//spiral(-1, angleT);
	//spiral(-1, angleT + 60);	
	//spiral(1, angleT + 240);
	//spiral(1, angleT + 180);
}

task TFinalize {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) { yield; }
	
	// this part only applies to spellcards, it's the spellcard bonus
	if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
    +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
		AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
	}
	
	SetAutoDeleteObject(true);
	killBossPhase(objBoss);
	wait(120);
	CloseScript(GetOwnScriptID());
}

task StartSpell {
	let cutin = GetCurrentScriptDirectory ~ "../images/Hermione.png";
	ObjCutin_SetSpellcardS4("Royal Maid - Blast Geminio", cutin, NAZRIN, 240, 240, 240);
	ObjCutin_LaunchS3(NAZRIN, cutin, "Normal");
	ObjEnemyBossScene_StartSpell(objScene);
}

task gemini(side) {	
	let ex = ObjMove_GetX(objBoss);
	let ey = ObjMove_GetY(objBoss);
	let radius = 80;														//  F I X   T H I S
	let spd = 1.3;
	let wvel = pi()*(radius*spd)/360;						//  F I X   T H I S (radius change doesn't work with wvel)
	let nwaves = 2;
	let graphic = 63;
	if(side==1) { graphic = 62; }
	
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {	
		let gemini = CreateCurveLaserA1(ex+radius*side, ey, spd, side*90, 100, 10, 48, 30);
		ObjMove_SetAngularVelocity(gemini, wvel);
		loop(5) {
			loop(8) {
				if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
				PlaySound("Atk3", 30, 10);
				ascent(i in 0..nwaves) {
					ascent(j in 0..4) {
						CreateShotA1(ObjMove_GetX(gemini), ObjMove_GetY(gemini), 0.6 + j/3, 
							ObjMove_GetAngle(gemini) + (i-0.5)*360/nwaves - j*9, graphic, 10);
					}
				}
				wait(5);
			}
			wait(35);
		}
		PlaySound("Charge", 100, 0);
		wait(80);

		let nshotsBlast = 44;
		let maxSpd = 8;
		spd = maxSpd/6;
		let accel = -maxSpd/30;
		let graphicAux = 63-47;		// these help choose the right color
		let graphicAux2 = 282-63;
		let delay = 45;
		if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
		PlaySound("Atk4", 100, delay);
		ascent(i in 0..nshotsBlast) {
			CreateShotA2(ObjMove_GetX(gemini), ObjMove_GetY(gemini), maxSpd, i*360/nshotsBlast, accel, spd, graphic-graphicAux, delay);
		}
		ascent(i in 0..nshotsBlast) {
			let spdAux = rand(maxSpd/3, maxSpd);
			CreateShotA2(ObjMove_GetX(gemini), ObjMove_GetY(gemini), spdAux, rand(0, 360), -spdAux/30, spdAux/6, graphic-graphicAux, delay);
		}
		ascent(i in 0..nshotsBlast/2) {
			let spdAux = rand(maxSpd/4, maxSpd/2);
			CreateShotA2(ObjMove_GetX(gemini), ObjMove_GetY(gemini), spdAux, rand(0, 360), -spdAux/30, spdAux/6, graphic+graphicAux2, delay);
		}
		wait(20);
		Obj_Delete(gemini);
		wait(60);
	}
}

/* task spiral(dir, angleT) {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		let ex = ObjMove_GetX(objBoss);
		let ey = ObjMove_GetY(objBoss);	

		let obj;
		ascent(i in 0..120) {
			if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
			PlaySound("Atk3", 30, 10);
			let ballInterval = 16;

			//if(i % ballInterval == 1 || i % ballInterval == ballInterval-1) {} else
			if(i % (ballInterval*2) == ballInterval) {
					let obj = CreateShotA1(ex, ey, 2, angleT, 275, 0);
					ObjMove_AddPatternA2(obj, 90, 2, NO_CHANGE, -0.05, 0, 0.5);
			} else if (i % (ballInterval*2) == 0) {
					let obj = CreateShotA1(ex, ey, 2, angleT, 281, 0);
					ObjMove_AddPatternA2(obj, 90, 2, NO_CHANGE, -0.1, 0, 0);
					ObjMove_AddPatternA4(obj, 180, 0, 0, +0.05, 0, 3, GetPlayerObjectID(), NO_CHANGE);
			} else {
					CreateShotA2(ex, ey, 2, angleT, +0.005, 3, 63, 0);
			}
			angleT += 6*dir;
			wait(4);
		}
		wait(30);
		blast(ex - dir*rand(80,120), dir);
		wait(180);
	}
} */



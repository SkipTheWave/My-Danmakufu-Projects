#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["AL Aurora Noctis S4 - Hermione Nonspell 3"]
#Text["Azur Lane - Aurora Noctis[r]Stage 4 Boss"]
#BGM["./../music/Battlefield.ogg"]
#Background["script/default_system/Default_Background_IceMountain.txt"]
#System["./../../system/Default_System.txt"]
#include "script/Skip Scripts/common/AllStarShot/AllStarShot_Const.dnh"
#include "script/Skip Scripts/common/libraries/skip_general_lib.dnh"

let objBoss;

@Event{
	alternative(GetEventType())
		case(EV_REQUEST_LIFE){ SetScriptResult(4500); }
    case(EV_REQUEST_TIMER){ SetScriptResult(35); }
    case(EV_REQUEST_SPELL_SCORE){ SetScriptResult(250000); }
}

@Initialize{
	SetPauseScriptPath(GetCurrentScriptDirectory() ~ "./../../system/Pause.dnh");
    SetEndSceneScriptPath(GetCurrentScriptDirectory() ~ "./../../system/EndScene.dnh");
    SetReplaySaveSceneScriptPath(GetCurrentScriptDirectory() ~ "./../../system/ReplaySaveScene.dnh");
	
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	SetCommonData("bossActive", 1);
	
	ObjMove_SetDestAtFrame(objBoss, GetCenterX(), GetCenterY() - 80, 60);
    TDrawLoop; 
    TFinalize;
    MainTask;
}

@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
	
	yield;
}

task TDrawLoop {
	let imgBoss = GetCurrentScriptDirectory() ~ "../images/HermioneChibi.png";
	ObjPrim_SetTexture(objBoss, imgBoss);
	ObjSprite2D_SetSourceRect(objBoss, 1, 1, 71, 74); 			
	ObjSprite2D_SetDestCenter(objBoss);
}

task MainTask {
	wait(90);
	main;
}

task TFinalize {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) { yield; }
	SetAutoDeleteObject(true);
	killBossPhase(objBoss);
	wait(120);
	CloseScript(GetOwnScriptID());
}




task main {
	while(!Obj_IsDeleted(objBoss)) {
		shootA(1);
		wait(60);
		moveX(GetCenterX() - 120);
		shootA(-1);
		wait(60);
		moveX(GetCenterX());
		wait(120);
		
		shootA(-1);
		wait(60);
		moveX(GetCenterX() + 120);
		shootA(1);
		wait(60);
		moveX(GetCenterX());
		shootA(-1);
		wait(240);
	}
}

task moveX(x) {
	ObjMove_SetDestAtWeight(objBoss, x, GetCenterY() - 80, 60, 3);
}

task shootA(dir) {		// takes 50 frames total
	let angleT = 0;
	loop(10) {
		if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
		PlaySound("Twinkle1", 50, 10);
		ascent(i in 0..3) {
			ascent(j in 0..6) {
				let spd1 = 3 + j*0.7;
				let accel1 = -0.2;
				let max1 = 0;
				let spd2 = 0;
				let accel2 = +0.02 + j*0.005;
				let max2 = 1 + j/2;
				let wvel2 = 2.5*dir;
				let wvel3 = 0*wvel2;

				let obj = CreateShotA2(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 
					spd1, angleT + i*360/3, accel1, max1, 266, 10);
				ObjMove_AddPatternA3(obj, 60, spd2, NO_CHANGE, accel2, wvel2, max2, 255);
				ObjMove_AddPatternA2(obj, 120, max2, NO_CHANGE, 0, wvel3, 0);
			}
		}
		angleT += 12*dir;
		wait(11);
	}
}




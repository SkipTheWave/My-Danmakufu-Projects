#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["AL Aurora Noctis S3 - Renown Nonspell - Lunatic"]
#Text["Azur Lane - Aurora Noctis[r]Stage 3 Miniboss"]
#BGM["./../music/Illusionary White Traveller.ogg"]
#Background["script/default_system/Default_Background_IceMountain.txt"]
#include "script/Skip Scripts/common/AllStarShot/AllStarShot_Const.dnh"
#include "script/Skip Scripts/common/libraries/skip_general_lib.dnh"

let objBoss;

@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){ SetScriptResult(2400); }
    case(EV_REQUEST_TIMER){ SetScriptResult(21); }
    case(EV_REQUEST_SPELL_SCORE){ SetScriptResult(200000); }
}

@Initialize{
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	SetCommonData("bossActive", 1);
	
	ObjMove_SetDestAtFrame(objBoss, GetCenterX(), GetCenterY - 50, 60);
    TDrawLoop; 
    TFinalize;
    MainTask;
}

@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
	
	yield;
}

task TDrawLoop {
	let imgBoss = GetCurrentScriptDirectory() ~ "../images/RenownChibi.png";
	ObjPrim_SetTexture(objBoss, imgBoss);
	ObjSprite2D_SetSourceRect(objBoss, 1, 1, 64, 73); 			
	ObjSprite2D_SetDestCenter(objBoss);
}

task MainTask {
	wait(60);
	shoot;
	wait(60);
	
}

task TFinalize {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) { yield; }
	SetAutoDeleteObject(true);
	killBoss(objBoss);
	wait(180);
	CloseScript(GetOwnScriptID());
}



task shoot {
	while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		let bossX = ObjMove_GetX(objBoss);
		let bossY = ObjMove_GetY(objBoss);
		
		PlaySound("Charge", 70, 0);
		PlaySound("Charge", 70, 80);
		loop(180) {
			if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
			let obj = CreateShotA1(bossX, bossY, 1.5, 270, 562, 10);
			shotMov(obj);
			wait(1);
		}
		slash;
		
		wait(180);
	}
}

task shotMov(obj) {
	loop(3) {
		let ang = ObjMove_GetAngle(obj);
		if(ang == 270) { ObjMove_SetAngularVelocity(obj, rand(-2, 2)); }
		if(ang > 270) { ObjMove_SetAngularVelocity(obj, rand(-2, 0)); }
		if(ang < 270) { ObjMove_SetAngularVelocity(obj, rand(0, 2)); }
		wait(rand_int(20, 40));
	}
	ObjMove_AddPatternA2(obj, 0, 1.5, NO_CHANGE, -0.05, 0, 0);
	wait(45);
	PlaySound("Twinkle1", 50, 0);
	ObjShot_SetGraphic(obj, 305);
	ObjMove_AddPatternA2(obj, 0, 5.2, GetAngleToPlayer(obj) + rand(-4, 4), 0, 0, 4);
}

task slash {
	let x = ObjMove_GetX(objBoss);
	let y = ObjMove_GetY(objBoss);
	let angle = rand(0, 359);
	
	while(y <= GetStgFrameHeight() - 5) {
		if(ObjEnemy_GetInfo(objBoss, INFO_LIFE) <= 0) { return; }
		ascent(i in 0..4) {
			CreateShotA1(x + 20*sin(angle), y, 1.5, angle + i*90, 8, 20);
			CreateShotA1(x - 20*sin(angle), y, 1.5, angle + i*90, 8, 20);
		}
		angle += 11;
		y += 9;
		wait(3);
	}
}



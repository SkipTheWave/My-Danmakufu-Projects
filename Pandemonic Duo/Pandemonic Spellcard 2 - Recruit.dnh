#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Pandemonic Duo - Spellcard 2 - Recruit"]
#Text["Madness \"Collision Orbit\", \"Recruit\" difficulty"]
#BGM["./Music/dBu - Pandemonic Planet.ogg"]
#Background["script/default_system/Default_Background_IceMountain.txt"]
#include "./CrispBrightShot/Shotconstants.dnh"
#include "script/Skip Scripts/common/libraries/skip_general_lib.dnh"
#include "script/Cutin/Cutin.txt"

let Hecatia;
let Clownpiece;
let radius = 160;
let startY_Hecatia = GetCenterY();
let startY_Clownpiece = startY_Hecatia - radius;
let startX_Hecatia = GetCenterX();
let startX_Clownpiece = GetCenterX();
let objScene = GetEnemyBossSceneObjectID();

@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){ SetScriptResult(8000); }
    case(EV_REQUEST_TIMER){ SetScriptResult(60); }
    case(EV_REQUEST_SPELL_SCORE){ SetScriptResult(400000); }
}

@Initialize{
	SetPauseScriptPath(GetCurrentScriptDirectory() ~ "./system/Pause.dnh");
    SetEndSceneScriptPath(GetCurrentScriptDirectory() ~ "./system/EndScene.dnh");
    SetReplaySaveSceneScriptPath(GetCurrentScriptDirectory() ~ "./system/ReplaySaveScene.dnh");
	
	Hecatia = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	Clownpiece = ObjEnemy_Create(OBJ_ENEMY);
	ObjEnemy_Regist(Hecatia);
	ObjEnemy_Regist(Clownpiece);
	StartSpell;
	
	ObjMove_SetDestAtFrame(Hecatia, GetCenterX(), startY_Hecatia, 60);
	ObjMove_SetDestAtFrame(Clownpiece, GetCenterX(), startY_Clownpiece, 60);
    TDrawLoop; 
    TFinalize;
    MainTask;
}

@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(Hecatia, ObjMove_GetX(Hecatia), ObjMove_GetY(Hecatia), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(Hecatia, ObjMove_GetX(Hecatia), ObjMove_GetY(Hecatia), 20);
	
	ObjEnemy_SetIntersectionCircleToShot(Hecatia, ObjMove_GetX(Clownpiece), ObjMove_GetY(Clownpiece), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(Hecatia, ObjMove_GetX(Clownpiece), ObjMove_GetY(Clownpiece), 20);
	yield;
	yield;
}

task TDrawLoop {
	let imgHecatia = GetCurrentScriptDirectory() ~ "Images/Hecatia2-s.png";
	let imgClownpiece = GetCurrentScriptDirectory() ~ "Images/Clownpiece4-s.png";
	ObjPrim_SetTexture(Hecatia, imgHecatia);
	ObjPrim_SetTexture(Clownpiece, imgClownpiece);
	ObjSprite2D_SetSourceRect(Hecatia, 1, 1, 52, 94); 	
	ObjSprite2D_SetSourceRect(Clownpiece, 1, 1, 64, 86); 		
	ObjSprite2D_SetDestCenter(Hecatia);
	ObjSprite2D_SetDestCenter(Clownpiece);
}

task MainTask {
	wait(90);
	clownpieceMoveMain;
	shootStars;
	wait(360);
	shootHecatiaMain;
}

task TFinalize {
	while(ObjEnemy_GetInfo(Hecatia, INFO_LIFE) > 0) { yield; }
	
	// this part only applies to spellcards, it's the spellcard bonus
	if(ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
    +ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT) == 0){
		AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
	}
	
	Obj_Delete(Hecatia);
	Obj_Delete(Clownpiece);
	DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
	SetAutoDeleteObject(true);
	
	PlaySound("Defeat", 50, 0);
	wait(120);
	CloseScript(GetOwnScriptID());
}

task StartSpell {
	let cutin = GetCurrentScriptDirectory~"Images/pandemonic duo.png";
	ObjCutin_SetSpellcardS4("Madness \"Collision Orbit\"", cutin, NAZRIN, 255, 25, 100);
	ObjCutin_LaunchS3(NAZRIN, cutin, "Recruit");
	ObjEnemyBossScene_StartSpell(objScene);
}

function distance(x1, y1, x2, y2) {
	return ( (x2 - x1)^2 + (y2 - y1)^2 ) ^ 0.5;
}


task moveClownpiece() {
	let newX = rand(GetCenterX() - 80, GetCenterX() + 160);
	ObjMove_SetDestAtSpeed(Clownpiece, newX, startY_Clownpiece, 1.5);
}

task clownpieceMoveMain {
	let angleCP = 270;
	while(!Obj_IsDeleted(Clownpiece)) {
		ObjMove_SetX(Clownpiece, GetCenterX() + radius*cos(angleCP));
		ObjMove_SetY(Clownpiece, startY_Hecatia + radius*sin(angleCP));
		ObjMove_SetAngle(Clownpiece, angleCP);
		angleCP += 0.2;
		yield;
	}
}

task shootStars {
	while(!Obj_IsDeleted(Clownpiece)) {
		let radiusS = 20;
		let numWaves = 3;
		let angleSect = 60;
		let angleT = ObjMove_GetAngle(Clownpiece) - 90 - angleSect;
		if(numWaves%2 != 0) {
			let angleT = ObjMove_GetAngle(Clownpiece);
		}
		ascent(i in 0..numWaves) {
			let angleS = angleT + i*angleSect;
			let x = ObjMove_GetX(Clownpiece) + radiusS*cos(angleS);
			let y = ObjMove_GetY(Clownpiece) + radiusS*sin(angleS);
			
			let obj = CreateShotA2(x, y, 7, angleS, -0.22, 1, STAR_S_YELLOW, 5);
			delete(obj, 70);
		}
		wait(4);
	}
}

task shootHecatiaMain {
	while(!Obj_IsDeleted(Hecatia)) {
		shootFire;
		wait(700);
		shootChains;
		wait(400);
	}
}


task shootChains {
	let chainNum = 5;
	let chainSect = 360/chainNum;
	let chainLength = 60;
	
	// "warning shot"
	let delay = 55;
	ascent(i in 0..10) {
		let obj = CreateShotA1(ObjMove_GetX(Hecatia), ObjMove_GetY(Hecatia), 
			5, i*36, KUNAI_S_RED, delay);
		delete(obj, delay);
	}
	wait(delay);
	
	let angleT = GetAngleToPlayer(Hecatia) + chainSect/2;
	loop(chainLength) {
		if(Obj_IsDeleted(Hecatia)) { return; }
		PlaySound("Twinkle1", 40, 15);
		
		ascent(i in 0..chainNum) {
			let obj = CreateShotA1(ObjMove_GetX(Hecatia), ObjMove_GetY(Hecatia), 
				5, angleT + i*chainSect, KUNAI_S_RED, 0);
		}
		angleT += -0.5;
		wait(5);
	}
}

task shootFire {
	let numShots = 50;
	
	loop(numShots) {
		if(Obj_IsDeleted(Hecatia)) { return; }
		PlaySound("Atk5", 40, 25);
		
		let radiusF = rand(15, 220);
		let angleF = rand(0, 359);
		let x = ObjMove_GetX(Hecatia) + radiusF*cos(angleF);
		let y = ObjMove_GetY(Hecatia) + radiusF*sin(angleF);
		
		let obj = CreateShotA2(x, y, 0, rand(0, 359), +0.1, 2, FIREBALL_RED, 60);
		orbitFire(obj, radiusF, angleF);
		wait(4);
	}
}

task orbitFire(obj, radiusF, angleF) {
	delete(obj, 600);
	while(!Obj_IsDeleted(obj)) {
		ObjMove_SetX(obj, GetCenterX() + radiusF*cos(angleF));
		ObjMove_SetY(obj, GetCenterY() + radiusF*sin(angleF));
		ObjMove_SetAngle(obj, angleF + 90);
		angleF += 0.3;
		yield;
	}
}


